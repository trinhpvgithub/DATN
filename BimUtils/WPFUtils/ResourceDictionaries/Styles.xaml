<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="DataGridStyle.xaml" />
        <ResourceDictionary Source="TextBoxStyle.xaml" />
        <ResourceDictionary Source="ButtonStyle.xaml" />
        <ResourceDictionary Source="ComboBoxStyle.xaml" />
        <ResourceDictionary Source="CheckBoxStyle.xaml" />
        <ResourceDictionary Source="RadiobuttonStyle.xaml" />
        <ResourceDictionary Source="GroupBoxStyle.xaml" />
        <ResourceDictionary Source="ProgressBarStyle.xaml" />
        <ResourceDictionary Source="ToggleButtonStyle.xaml" />
        <ResourceDictionary Source="TreeViewStyle.xaml" />
        <ResourceDictionary Source="BorderStyle.xaml" />
        <ResourceDictionary Source="TabItemStyle.xaml" />
        <ResourceDictionary Source="TabControlStyle.xaml" />
        <ResourceDictionary Source="PasswordBoxStyle.xaml" />
        <!--<ResourceDictionary Source="MenuStyle.xaml" />
                <ResourceDictionary Source="MenuItemStyle.xaml" />-->
    </ResourceDictionary.MergedDictionaries>

    <!--<Style TargetType="{x:Type GroupBox}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}"
                               FontWeight="Bold"
                               Foreground="DarkRed" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="100"/>
    </Style>-->

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="5" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontSize" Value="12" />
    </Style>

    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="BorderBrush" Value="#e3e9ef" />
        <Setter Property="Margin" Value="0" />
    </Style>
    <Style TargetType="{x:Type ListBox}">
        <Setter Property="BorderBrush" Value="#e3e9ef" />
        <Setter Property="Margin" Value="0" />
    </Style>

    <Style TargetType="{x:Type DockPanel}">
        <Setter Property="Margin" Value="0" />
    </Style>

    <Style TargetType="{x:Type TreeView}">
        <Setter Property="BorderBrush" Value="#e3e9ef" />
        <Setter Property="Margin" Value="0" />
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="DefaultButtonStyle">
    </Style>

    <Style TargetType="{x:Type StackPanel}">
        <Style.Resources>
            <Style TargetType="StackPanel">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="#FFF4F4F4" />
                        <Setter Property="Opacity" Value="0.7" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>
    <Style TargetType="{x:Type ListView}">
        <Setter Property="BorderBrush" Value="#e3e9ef" />
        <Style.Resources>
            <Style TargetType="ListView">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="#FFF4F4F4" />
                        <Setter Property="Opacity" Value="0.7" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>
    <Style TargetType="{x:Type Grid}">
        <Style.Resources>
            <Style TargetType="Grid">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="#FFF4F4F4" />
                        <Setter Property="Opacity" Value="0.7" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>
    <Style TargetType="{x:Type Border}">
        <Style.Resources>
            <Style TargetType="Border">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="#FFF4F4F4" />
                        <Setter Property="Opacity" Value="0.7" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>
    <Style x:Key="VerticalSeparator" TargetType="{x:Type Separator}">
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <TransformGroup>
                    <TransformGroup.Children>
                        <TransformCollection>
                            <RotateTransform Angle="90"/>
                        </TransformCollection>
                    </TransformGroup.Children>
                </TransformGroup>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MainGrid" TargetType="{x:Type Grid}">
        <Setter Property="Margin" Value="2" />
    </Style>

    <Style x:Key="WindowBackground" TargetType="Window">
        <!--<Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/BIMToolkit;component/Resources/Images/Resource/Origin/Background.png" />
            </Setter.Value>
        </Setter>-->
    </Style>

    <!--<Style x:Key="WindowButtonsControlStyle" TargetType="{x:Type UserControl}">
                <Setter Property="Margin" Value="-9 9 -9 -9" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Bottom" />
                <Setter Property="Height" Value="54" />
        </Style>

        <ControlTemplate x:Key="SimpleExpanderButton" TargetType="{x:Type ToggleButton}">
                <Border x:Name="ExpanderButtonBorder" Background="{TemplateBinding Control.Background}"
                        BorderBrush="{TemplateBinding Control.BorderBrush}"
                        BorderThickness="{TemplateBinding Control.BorderThickness}"
                        Padding="{TemplateBinding Control.Padding}">
                        <Grid>
                                <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Fill="Transparent" Grid.ColumnSpan="2" />
                                <Ellipse Name="Circle" Grid.Column="0" Stroke="DarkGray" Width="20" Height="20" HorizontalAlignment="Center"
                                 VerticalAlignment="Center" />
                                <Path x:Name="Sign" Grid.Column="0" Data="M 0,5 L 10,5 M 5,0 L 5,10 Z" Stroke="#6E6E6E" Width="10"
                            Height="10" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center"
                            RenderTransformOrigin="0.5,0.5" />
                                <ContentPresenter x:Name="HeaderContent" Grid.Column="1" Margin="4,0,0,0" ContentSource="Content"
                                                    VerticalAlignment="Center" />
                        </Grid>
                </Border>

                <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter TargetName="Sign" Property="Path.Data" Value="M 0,5 L 10,5 Z" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                                <Setter TargetName="Circle" Property="Shape.Stroke" Value="#274C5E" />
                                <Setter TargetName="Sign" Property="Shape.Stroke" Value="#274C5E" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                                <Setter TargetName="Circle" Property="Shape.Stroke" Value="Black" />
                                <Setter TargetName="Circle" Property="Shape.StrokeThickness" Value="1.1" />
                                <Setter TargetName="Sign" Property="Shape.Stroke" Value="Black" />
                        </Trigger>
                </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="SimpleExpander" TargetType="{x:Type Expander}">
                <Border BorderThickness="1" BorderBrush="#DDDDDD">
                        <DockPanel Background="#F4F4F4">
                                <ToggleButton x:Name="ExpanderButton" DockPanel.Dock="Top" Template="{StaticResource SimpleExpanderButton}"
                                            Content="{TemplateBinding HeaderedContentControl.Header}" OverridesDefaultStyle="true"
                                            Padding="2 4" AutomationProperties.AutomationId="Z1646"
                                            IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
                                <ContentPresenter x:Name="ExpanderContent" Grid.Row="1" Visibility="Collapsed" DockPanel.Dock="Bottom" />
                        </DockPanel>
                </Border>
                <ControlTemplate.Triggers>
                        <Trigger Property="Expander.IsExpanded" Value="true">
                                <Setter TargetName="ExpanderContent" Property="UIElement.Visibility" Value="Visible" />
                        </Trigger>
                </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="PathButton" TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="#768D99" />
                <Style.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                                <Setter Property="Control.Foreground" Value="#274C5E" />
                        </Trigger>
                </Style.Triggers>
        </Style>-->
</ResourceDictionary>